{
  "hash": "f6dfc8422284e9e8685b8990b65d9f96",
  "result": {
    "markdown": "---\ntitle: \"Pixels and Preferences: The Ultimate Gamer's Landscape \"\ndescription: \"Exploring different aspects of video games, their popularity, and ratings.\"\nauthor:\n  - name: Kimmy Wong\n    url: https://kimberleewong.github.io/\n    affiliation: MEDS \n    affiliation-url: https://bren.ucsb.edu/masters-programs/master-environmental-data-science\ndate: 2025-14-03\nexecute: \n  warning: false\n  message: false\ncategories: [R, MEDS, Data Visualization, Quarto]\ncitation: \n  url: https://kimberleewong.github.io/posts/environmental_redlining/environmental_redlining_blog.html\ntoc: true\nimage: game.jpg\ndraft: false\n---\n\n\n### Introduction\n\nMy favorite hobby is video games. Growing up with three brothers, I spent much of my time watching them play video games. As I discovered I got older, I finally started playing them for myself. So when given the opportunity to make a fun, creative infographic, I wanted to do an homage to the entertainment that connected me with my brothers, offered me an escape, and allowed me to work for one of my favorite youtube channels.\n\n### Data\nI found the data on Kaggle. The creator aggregated the data from a site called Backloggd. I had never heard of it before, but it is the video game equivalent of Good Reads (books) orLetterboxd (movies). \n\n### Final Infographic\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](infographic.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n## Code \n\n### Load Libraries\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nlibrary(here)\nlibrary(tidyverse)\nlibrary(janitor)\nlibrary(scales)\nlibrary(treemap)\n```\n:::\n\n\n### Read in Data\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ngames <- read_csv(here(\"posts\", \"video_games\", \"data\", \"games.csv\")) %>% # keep only one observation of each game name\n  distinct(name, .keep_all = TRUE)\n\ngenres <- read_csv(here(\"posts\", \"video_games\",\"data\", \"genres.csv\"))\nscores <- read_csv(here(\"posts\", \"video_games\",\"data\", \"scores.csv\"))\nplatforms <- read_csv(here(\"posts\", \"video_games\",\"data\", \"platforms.csv\"))\ndevelopers <- read_csv(here(\"posts\", \"video_games\",\"data\", \"developers.csv\"))\n```\n:::\n\n\n### Radial Bar Chart Data Wrangling\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ngames_small <- games %>% \n  select(c(\"id\", \"rating\", \"name\"))\n\ngenres_ratings <- left_join(games_small, genres, by = \"id\")\n\nadventure <- genres_ratings %>% \n  filter(genre == \"Adventure\")\n\ngenre_avg_scores <- genres_ratings %>%\n  group_by(genre) %>% \n  summarise(avg_rating = mean(rating, na.rm = TRUE),\n            game_count = n())%>% \n  arrange(desc(avg_rating)) %>%\n  mutate(\n    genre = factor(genre, levels = genre)) %>% # Preserve order for plotting\n  filter(genre != \"NA\") \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Radial bar chart with bar length for avg_rating and color intensity for game count\nggplot(genre_avg_scores, aes(x = genre, y = avg_rating, fill = game_count)) +\n  geom_bar(stat = \"identity\", width = 0.6) +   # Adjust bar width\n  coord_polar(start = 0) +                    # Polar coordinates\n  scale_fill_gradient(low = \"lightblue\", high = \"darkblue\") +  # Gradient for game count\n  labs(\n    title = NULL,\n    x = NULL, \n    y = NULL,\n    fill = \"Game Count\"  # Update legend for clarity\n  ) +\n  scale_x_discrete(labels = label_wrap(10)) + # Wrap genre labels\n  theme_minimal() +\n  theme(\n    axis.text.x = element_text(size = 10, face = \"bold\", hjust = 0.1), # Rotate labels\n    axis.text.y = element_blank(),  # Remove radial grid text\n    plot.title = element_text(size = 16, face = \"bold\", hjust = 0.5),\n    panel.grid.major = element_blank(),\n    plot.margin = margin(b = 20, t = 20)\n  )\n```\n\n::: {.cell-output-display}\n![](video_game_blog_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n### Time plot\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\n# Join developers\ndeveloper_games <- left_join(developers, games, by = \"id\") %>% \n  na.omit()\n\n# Aggregate data by Developer and calculate total plays\ntop_developers <- developer_games %>%\n  group_by(developer) %>%\n  summarise(total_plays = sum(plays, na.rm = TRUE)) %>%\n  arrange(desc(total_plays)) %>%\n  slice(1:5)  # Select the top 5 developers\n\n# View the result\nprint(top_developers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 Ã— 2\n  developer                   total_plays\n  <chr>                             <dbl>\n1 Nintendo                        2730638\n2 Capcom                           860277\n3 Electronic Arts                  815942\n4 Square Enix                      708478\n5 Sony Computer Entertainment      706838\n```\n:::\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ndeveloper_games <- developer_games %>% \n  filter(developer %in% c(\"Nintendo\", \"Electronic Arts\", \"Capcom\", \"Square Enix\", \"Sony Computer Entertainmen\"))\n\ndeveloper_top_games <- developer_games %>%\n  group_by(developer) %>%\n  slice_max(order_by = plays, n = 10) %>%\n  ungroup()  # Ungroup after filtering\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nggplot(developer_top_games, aes(x = date, y = plays, color = developer))  +\n  geom_line() +\n  geom_point() +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](video_game_blog_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n### Treemap Plot\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\nplatform_count <- platforms %>% \n  group_by(platform) %>% \n  summarize(count = n(), na.rm = TRUE) %>%\n  arrange(desc(count)) %>%\n  slice(1:15)\n```\n:::\n\n\n#### Visualize\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Show the code\"}\ntreemap(platform_count,\n        index = \"platform\",\n        vSize = \"count\", \n        type = \"index\",  # Use index-based coloring \n        border.col = \"black\",  # Thin white borders\n        #fontsize.labels = c(70, 20),  # Adjust font size for labels\n        fontcolor.labels = \"white\",  # Make labels visible\n        align.labels=c(\"center\", \"center\"),\n        inflate.labels = TRUE,  # Force labels to fit\n        format.legend = list(scientific = FALSE, big.mark = \" \"))\n```\n\n::: {.cell-output-display}\n![](video_game_blog_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "video_game_blog_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}